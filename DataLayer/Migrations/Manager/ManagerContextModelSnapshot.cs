// <auto-generated />
using System;
using DataLayer.Func;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations.Manager
{
    [DbContext(typeof(ManagerContext))]
    partial class ManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.Domain.Arangements.Arangement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArangementType")
                        .HasColumnType("int");

                    b.Property<long>("EndHourTicks")
                        .HasColumnType("bigint");

                    b.Property<string>("LimousineName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("StartHourTicks")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LimousineName");

                    b.ToTable("Arangements");

                    b.HasDiscriminator<int>("ArangementType");
                });

            modelBuilder.Entity("DomainLayer.Domain.Clients.Client", b =>
                {
                    b.Property<int>("ClientNumber")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("BtwNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ClientNumber");

                    b.HasIndex("AddressId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.ClientDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientNumber")
                        .HasColumnType("int");

                    b.Property<int>("ClientType")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("NrOfReservationsNeeded")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientNumber");

                    b.ToTable("ClientDiscount");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.HireDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LimousineName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LimousineName");

                    b.ToTable("HireDate");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.HourType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailsId")
                        .HasColumnType("int");

                    b.Property<int>("NrOfHours")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetailsId");

                    b.ToTable("HourType");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.ReservationsPerYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientNumber")
                        .HasColumnType("int");

                    b.Property<int>("NrOfReservations")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientNumber");

                    b.ToTable("ReservationsPerYear");
                });

            modelBuilder.Entity("DomainLayer.Domain.Reservation.Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountWithoutBtw")
                        .HasColumnType("int");

                    b.Property<string>("Arangement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BtwAmount")
                        .HasColumnType("int");

                    b.Property<float>("BtwPercentage")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateLimousineNeeded")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndLocationId")
                        .HasColumnType("int");

                    b.Property<string>("LimousineName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("StartLocationId")
                        .HasColumnType("int");

                    b.Property<int>("SubTotal")
                        .HasColumnType("int");

                    b.Property<int>("ToPayAmount")
                        .HasColumnType("int");

                    b.Property<float>("UsedDiscount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("LimousineName");

                    b.HasIndex("StartLocationId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("DomainLayer.Domain.Reservation.Reservering", b =>
                {
                    b.Property<int>("ReservationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientNumber")
                        .HasColumnType("int");

                    b.Property<int?>("DetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReservationNumber");

                    b.HasIndex("ClientNumber");

                    b.HasIndex("DetailsId");

                    b.HasIndex("LocationId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DomainLayer.Domain.Vloot.Limousine", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<int>("FirstHourPrice")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DomainLayer.Domain.Arangements.Airport", b =>
                {
                    b.HasBaseType("DomainLayer.Domain.Arangements.Arangement");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("DomainLayer.Domain.Arangements.Business", b =>
                {
                    b.HasBaseType("DomainLayer.Domain.Arangements.Arangement");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("DomainLayer.Domain.Arangements.NightLife", b =>
                {
                    b.HasBaseType("DomainLayer.Domain.Arangements.Arangement");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("DomainLayer.Domain.Arangements.Wedding", b =>
                {
                    b.HasBaseType("DomainLayer.Domain.Arangements.Arangement");

                    b.Property<int>("Price")
                        .HasColumnName("Wedding_Price")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("DomainLayer.Domain.Arangements.Wellness", b =>
                {
                    b.HasBaseType("DomainLayer.Domain.Arangements.Arangement");

                    b.Property<int>("Price")
                        .HasColumnName("Wellness_Price")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("DomainLayer.Domain.Arangements.Arangement", b =>
                {
                    b.HasOne("DomainLayer.Domain.Vloot.Limousine", null)
                        .WithMany("Arangements")
                        .HasForeignKey("LimousineName");
                });

            modelBuilder.Entity("DomainLayer.Domain.Clients.Client", b =>
                {
                    b.HasOne("DomainLayer.Domain.Help.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.ClientDiscount", b =>
                {
                    b.HasOne("DomainLayer.Domain.Clients.Client", null)
                        .WithMany("StaffelDiscount")
                        .HasForeignKey("ClientNumber");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.HireDate", b =>
                {
                    b.HasOne("DomainLayer.Domain.Vloot.Limousine", null)
                        .WithMany("HireDates")
                        .HasForeignKey("LimousineName");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.HourType", b =>
                {
                    b.HasOne("DomainLayer.Domain.Reservation.Details", null)
                        .WithMany("Hours")
                        .HasForeignKey("DetailsId");
                });

            modelBuilder.Entity("DomainLayer.Domain.Help.ReservationsPerYear", b =>
                {
                    b.HasOne("DomainLayer.Domain.Clients.Client", null)
                        .WithMany("PastReservations")
                        .HasForeignKey("ClientNumber");
                });

            modelBuilder.Entity("DomainLayer.Domain.Reservation.Details", b =>
                {
                    b.HasOne("DomainLayer.Domain.Help.Address", "EndLocation")
                        .WithMany()
                        .HasForeignKey("EndLocationId");

                    b.HasOne("DomainLayer.Domain.Vloot.Limousine", "Limousine")
                        .WithMany()
                        .HasForeignKey("LimousineName");

                    b.HasOne("DomainLayer.Domain.Help.Address", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId");
                });

            modelBuilder.Entity("DomainLayer.Domain.Reservation.Reservering", b =>
                {
                    b.HasOne("DomainLayer.Domain.Clients.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientNumber");

                    b.HasOne("DomainLayer.Domain.Reservation.Details", "Details")
                        .WithMany()
                        .HasForeignKey("DetailsId");

                    b.HasOne("DomainLayer.Domain.Help.Address", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
